package main

import (
    "context"
	"log"
	"net"
	"google.golang.org/grpc"
    pb "github.com/silverliningco/ahri_grpc/proto"
)

// this server has to implment whole the interfaces generated by the protobuf
type server struct{}

func (*server) EquipmentSearch(ctx context.Context, req *pb.Search) (*pb.Result, error) {
    
    return &pb.Result{
        CoolingCapacity: 17300,
        EER : 13,
        SEER: 16,
        HSPF: nil,
        AFUE: 80,
        outdoorUnitSKU: "24AAA518A003",
        IndoorUnitSKU: "CNPVP2414ALA",
        FurnaceSKU: "58SB0A045E14--12",
        NominalCoolingTons: 1.5,
        SensibleCapacity: nil,
        LatentCapacity: nil,
    }, nil
}
func main() {
    log.SetFlags(log.LstdFlags | log.Lshortfile)

    lis, err := net.Listen("tcp", "0.0.0.0:50051")
	if err != nil {
		log.Fatalf("Failed to listen %v", err)
	}

    s := grpc.NewServer()
    
    pb.RegisterSearchServiceServer(s, &server{})

	if err := s.Serve(lis); err != nil {
		log.Fatalf("Failed to serve %v", err)
	}
}
